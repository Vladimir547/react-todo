[{"G:\\мои файлы\\Ger\\react-todo\\src\\index.js":"1","G:\\мои файлы\\Ger\\react-todo\\src\\reportWebVitals.js":"2","G:\\мои файлы\\Ger\\react-todo\\src\\App.js":"3","G:\\мои файлы\\Ger\\react-todo\\src\\reducer\\reducer.js":"4","G:\\мои файлы\\Ger\\react-todo\\src\\list\\ListWrapper\\List.js":"5","G:\\мои файлы\\Ger\\react-todo\\src\\components\\form\\Form.js":"6","G:\\мои файлы\\Ger\\react-todo\\src\\components\\listItem\\ListItem.js":"7","G:\\мои файлы\\Ger\\react-todo\\src\\actions\\actions.js":"8","G:\\мои файлы\\Ger\\react-todo\\src\\components\\modal\\modal.js":"9"},{"size":704,"mtime":1606835238249,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":469,"mtime":1606895013975,"results":"13","hashOfConfig":"11"},{"size":3232,"mtime":1606914069558,"results":"14","hashOfConfig":"11"},{"size":1806,"mtime":1606895263376,"results":"15","hashOfConfig":"11"},{"size":1647,"mtime":1606895617186,"results":"16","hashOfConfig":"11"},{"size":1752,"mtime":1606897316707,"results":"17","hashOfConfig":"11"},{"size":1131,"mtime":1606896154326,"results":"18","hashOfConfig":"11"},{"size":2782,"mtime":1606864995377,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o2f9rr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"G:\\мои файлы\\Ger\\react-todo\\src\\index.js",[],["40","41"],"G:\\мои файлы\\Ger\\react-todo\\src\\reportWebVitals.js",[],"G:\\мои файлы\\Ger\\react-todo\\src\\App.js",[],"G:\\мои файлы\\Ger\\react-todo\\src\\reducer\\reducer.js",["42","43","44"],"G:\\мои файлы\\Ger\\react-todo\\src\\list\\ListWrapper\\List.js",["45"],"G:\\мои файлы\\Ger\\react-todo\\src\\components\\form\\Form.js",[],"G:\\мои файлы\\Ger\\react-todo\\src\\components\\listItem\\ListItem.js",["46","47"],"G:\\мои файлы\\Ger\\react-todo\\src\\actions\\actions.js",[],"G:\\мои файлы\\Ger\\react-todo\\src\\components\\modal\\modal.js",["48","49","50","51","52"],"import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { actionCloseModal } from '../../actions/actions';\r\nimport './modal.css';\r\n\r\nconst Modal = () => {\r\n    const dispatch = useDispatch();\r\n    const isShow = useSelector((state) => state.isModalShow );\r\n    const isEdit = useSelector((state) => state.isEdit);\r\n    const isView = useSelector((state) => state.isView);\r\n    const currentTask = useSelector((state) => state.currentTask);\r\n    const [ index, setIndex ] = useState(currentTask[0]);\r\n    const [ wrapper, setWrapper ] = useState(currentTask[1]);\r\n    const task = useSelector((state) => state[wrapper][index]);\r\n    const [ title, setTitle ] = useState(task.title);\r\n    const [ description, setDescription ] = useState(task.discription);\r\n    const closeModal = (e) => {\r\n        e.preventDefault();\r\n        setTitle('');\r\n        setDescription('');\r\n        dispatch(actionCloseModal());\r\n    };\r\n    const editTask = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'EDIT', payload: {wrapper: wrapper, num: index, newItem: {id: task.id, title: title, discription: description}}});\r\n        setTitle('');\r\n        setDescription('');\r\n        dispatch(actionCloseModal());\r\n    };\r\n    return (\r\n        \r\n        <div className=\"modal-wrapper\">\r\n            <div className=\"modal\">\r\n                {\r\n                    isView && !isEdit &&\r\n                    <div className='modal-content'>\r\n                        <p >title: <span id=\"modal-title\">{title}</span></p>\r\n                        <p>description: <span id=\"modal-description\"> {description}</span></p>\r\n                    </div>\r\n                }\r\n                {\r\n                    !isView && isEdit &&\r\n                    <form action=\"\" className=\"edit-form\" onSubmit={(e) => editTask(e)}>\r\n                        <label htmlFor=\"edit-form__title\"> Edit title</label>\r\n                        <input type=\"text\" id=\"edit-form__title\" name=\"editName\" placeholder=\"edit the title for this card\" onChange={(e) => setTitle(e.target.value)} value={title} />\r\n                        <label htmlFor=\"edit-form__description\"> Edit description</label>\r\n                        <textarea id=\"edit-form__description\" name=\"editName\" onChange={(e) => setDescription(e.target.value)} value={description} placeholder=\"edit the description for this card\"></textarea>\r\n                        <input type=\"submit\" name=\"edit\" value=\"edit\" id=\"edit-form__submit\" />\r\n                    </form>\r\n                }\r\n                <a href=\"\" className='modal-close' onClick={closeModal}><i className='icon-close' onClick={(e) => closeModal(e)}></i></a>\r\n            </div>\r\n\t    </div>\r\n    );\r\n};\r\n\r\nexport default Modal;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":66,"column":55,"nodeType":"59","messageId":"60","endLine":66,"endColumn":57},{"ruleId":"57","severity":1,"message":"58","line":71,"column":54,"nodeType":"59","messageId":"60","endLine":71,"endColumn":56},{"ruleId":"61","severity":1,"message":"62","line":88,"column":63,"nodeType":"63","messageId":"64","endLine":88,"endColumn":116,"fix":"65"},{"ruleId":"66","severity":1,"message":"67","line":41,"column":21,"nodeType":"68","endLine":41,"endColumn":82},{"ruleId":"69","severity":1,"message":"70","line":8,"column":11,"nodeType":"71","messageId":"72","endLine":8,"endColumn":17},{"ruleId":"69","severity":1,"message":"73","line":9,"column":11,"nodeType":"71","messageId":"72","endLine":9,"endColumn":22},{"ruleId":"69","severity":1,"message":"74","line":1,"column":26,"nodeType":"71","messageId":"72","endLine":1,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":9,"column":11,"nodeType":"71","messageId":"72","endLine":9,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":13,"column":20,"nodeType":"71","messageId":"72","endLine":13,"endColumn":28},{"ruleId":"69","severity":1,"message":"76","line":14,"column":22,"nodeType":"71","messageId":"72","endLine":14,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":52,"column":17,"nodeType":"68","endLine":52,"endColumn":73},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-whitespace-before-property","Unexpected whitespace before property id.","MemberExpression","unexpectedWhitespace",{"range":"79","text":"80"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'isShow' is assigned a value but never used.","Identifier","unusedVar","'currentTask' is assigned a value but never used.","'useEffect' is defined but never used.","'setIndex' is assigned a value but never used.","'setWrapper' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2947,2949],"."]